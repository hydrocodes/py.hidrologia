# -*- coding: utf-8 -*-
"""Hidrogramas_sinteticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UZDBlH-n9B9gFUpcXFJR53Gq4AlOkaL8

**Taller en Python - Hidrogramas sintéticos para cuencas sin medicion**<p>
Pedro Rau, PhD - prau@utec.edu.pe

#1. Hidrograma Sintético SCS
"""

# Hidrograma Sintético SCS (NCRS)
import numpy as np
import matplotlib.pyplot as plt
# ingresar las variables
A = 2.3  #area de la cuenca Km²
Tc = 1.2  #tiempo de concentracion hr
CN = 78  #curva numero
P = 40  #precipitacion de diseno mm
d = 0.3  #duracion de la precipitacion de exceso hr
# procesamiento
S = 25400/CN-254
if P > 0.2*S:
 Pe = (P-0.2*S)**2/(P+0.8*S)
 tl = 0.6*Tc
 Tp = d/2 + tl 
 Qp = 2.08*A*(Pe/10)/Tp
 xu = [0,0.2,0.4,0.6,0.8,1,1.2,1.4,1.6,1.8,2,2.2,2.4,2.6,2.8,3,3.2,3.4,3.6,3.8,4,4.2,4.4,4.6,4.8,5]
 yu = [0,0.1,0.31,0.66,0.93,1,0.93,0.78,0.56,0.39,0.28,0.207,0.147,0.107,0.077,0.055,0.04,0.029,0.021,0.015,0.011,0.008,0.006,0.004,0.002,0] 
 x = np.array(xu)*Tp
 y = np.array(yu)*Qp
 plt.plot(x,y,'o-')
 plt.title('Hidrograma Sintético SCS')
 plt.xlabel('Tiempo (hr)')
 plt.ylabel('Q (m3/s)')
 print("Caudal max =",Qp,"m3/s")
 print("Tiempo de ascenso  =",Tp,"hr")
else: print("P no genera escorrentia!")

"""#2. Hidrograma Sintético de Snyder





"""

# Hidrograma Sintético de Snyder
import numpy as np
import matplotlib.pyplot as plt
# ingresar las variables
A = 2500  #area de la cuenca Km²
L = 100  #longitud del curso principal Km
Lc = 50  #longitud al centroide Km
Ct = 2.64  #coeficiente
Cp = 0.56  #coeficiente de almacenamiento
Pe = 8  #precipitacion en exceso de diseno mm
d = 6  #duracion de la precipitacion de exceso hr
# procesamiento
tl = 0.75*Ct*(L*Lc)**0.3
dr = tl/5.5
if d>dr:
  tml = tl+(d-dr)/4
  Qp = 2.78*A*Cp/tml
  tb = 5.56/(Qp/A)
  W50 = 2.14/(Qp/A)**1.08
  W75 = 1.22/(Qp/A)**1.08
  yu = [0,0.5*Qp,0.75*Qp,Qp,0.75*Qp,0.5*Qp,0]
  y = np.array(yu)*Pe/10
  plt.plot([0,tml+d/2-W50/3,tml+d/2-W75/3,tml+d/2,tml+d/2+W75*2/3,tml+d/2+W50*2/3,tb],y, 'o-')
  plt.title('Hidrograma Sintético Snyder')
  plt.xlabel('Tiempo (hr)')
  plt.ylabel('Q (m3/s)')
  print("Caudal =",Qp*Pe/10,"m3/s")
  print("Tiempo de ascenso =",tml+d/2,"hr")
  print("Tiempo base =",tb,"hr")
else: 
  Qp = 2.78*A*Cp/tl
  tb = 5.56/(Qp/A)
  W50 = 2.14/(Qp/A)**1.08
  W75 = 1.22/(Qp/A)**1.08
  yu = [0,0.5*Qp,0.75*Qp,Qp,0.75*Qp,0.5*Qp,0]
  y = np.array(yu)*Pe/10
  plt.plot([0,tl+dr/2-W50/3,tl+dr/2-W75/3,tl+dr/2,tl+dr/2+W75*2/3,tl+dr/2+W50*2/3,tb],y, 'o-')
  plt.title('Hidrograma Sintético Snyder')
  plt.xlabel('Tiempo (hr)')
  plt.ylabel('Q (m3/s)')
  print("La duracion debe ser mayor! se muestran los resultados para una duracion teorica igual al tiempo de retardo entre 5.5")
  print("Caudal =",Qp*Pe/10,"m3/s")
  print("Tiempo de ascenso  =",tl+dr/2,"hr")
  print("Tiempo base =",tb,"hr")

"""#3. Hidrograma Sintético Estandar para zonas áridas"""

# Hidrograma Sintético Estandar para zonas áridas  
import numpy as np
import matplotlib.pyplot as plt
# ingresar las variables
A = 2500  #area de la cuenca Km²
ks = 0.05  #condiciones del suelo y subsuelo
k = 0.4  #coeficiente de infiltracion
fi = 0.9  #ratio de infiltracion inicial
ff = 0.1  #ratio de infiltracion final
Pe = 8  #precipitacion en exceso de diseno mm
# procesamiento
tp = (np.log(k/(k-ks)))/ks
Qp = A*(Pe/10)*(ks*(fi-ff)/(k-ks))*(k/(k-ks))**(-k/ks)
xu = [0,0.1,0.2,0.3,0.4,0.6,0.7,1.1,1.2,1.5,1.8,2.1,2.4,2.5,2.7,3.1,3.5,3.9,4,4.5,5,5.5,6,6.5,7,8,9,11,14]
yu = [0,0.2349,0.4273,0.5829,0.7068,0.8768,0.9303,1,0.9921,0.9329,0.8423,0.7393,0.6358,0.6023,0.5382,0.423,0.3269,0.2494,0.2327,0.1631,0.1129,0.0774,0.0526,0.0356,0.0239,0.0106,0.0047,0.0008,0] 
x = np.array(xu)*tp
y = np.array(yu)*Qp
plt.plot(x,y,'o-')
plt.title('Hidrograma Sintético Estandar')
plt.xlabel('Tiempo (hr)')
plt.ylabel('Q (m3/s)')
print("Caudal =",Qp,"m3/s")
print("Tiempo de ascenso =",tp,"hr")

"""Universidad de Ingenieria y Tecnologia UTEC<p>
Centro de Investigación y Tecnología del Agua CITA
"""